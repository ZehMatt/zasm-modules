# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

# Regenerate CMakeLists.txt automatically in the root project
set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)
endif()

# Create a configure-time dependency on cmake.toml to improve IDE support
if(CMKR_ROOT_PROJECT)
	configure_file(cmake.toml cmake.toml COPYONLY)
endif()

project(zasm-modules
	LANGUAGES
		CXX
)

# thirdparty
set(CMKR_CMAKE_FOLDER ${CMAKE_FOLDER})
if(CMAKE_FOLDER)
	set(CMAKE_FOLDER "${CMAKE_FOLDER}/thirdparty")
else()
	set(CMAKE_FOLDER thirdparty)
endif()
add_subdirectory(thirdparty)
set(CMAKE_FOLDER ${CMKR_CMAKE_FOLDER})

# Target zasm-modules
set(CMKR_TARGET zasm-modules)
set(zasm-modules_SOURCES "")

list(APPEND zasm-modules_SOURCES
	"src/zasm-modules/module.cpp"
	"src/zasm-modules/module.pe.cpp"
	"src/zasm-modules/module.pe.hpp"
	"include/zasm/modules/module.hpp"
)

list(APPEND zasm-modules_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${zasm-modules_SOURCES})
add_library(zasm-modules STATIC)

if(zasm-modules_SOURCES)
	target_sources(zasm-modules PRIVATE ${zasm-modules_SOURCES})
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${zasm-modules_SOURCES})

add_library(zasm::modules ALIAS zasm-modules)
target_compile_features(zasm-modules PUBLIC
	cxx_std_17
)

target_include_directories(zasm-modules PUBLIC
	include
)

target_link_libraries(zasm-modules PUBLIC
	zasm::common
	zasm::zasm
	LIEF::LIEF
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

# Target example
set(CMKR_TARGET example)
set(example_SOURCES "")

list(APPEND example_SOURCES
	"src/example/main.cpp"
)

list(APPEND example_SOURCES
	cmake.toml
)

set(CMKR_SOURCES ${example_SOURCES})
add_executable(example)

if(example_SOURCES)
	target_sources(example PRIVATE ${example_SOURCES})
endif()

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT example)
endif()

source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${example_SOURCES})

target_compile_features(example PRIVATE
	cxx_std_17
)

target_link_libraries(example PRIVATE
	zasm::common
	zasm::modules
)

unset(CMKR_TARGET)
unset(CMKR_SOURCES)

